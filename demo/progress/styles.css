/* Base */
@layer normalize {
  progress {
    appearance: none;
  }
  :focus-visible {
    outline: none;
  }
  *,
  ::before,
  ::after {
    box-sizing: border-box;
  }
}
/* Progress */
@layer normalize {
  progress,
  meter {
    display: block;
    block-size: 1em;
    inline-size: 10em;
    border: 0;
    background: none;
  }
  progress::-webkit-progress-bar, progress::-webkit-progress-value {
    background: none;
  }
  progress::-moz-progress-bar {
    background: none;
  }
  meter::-webkit-meter-bar, meter::-webkit-meter-suboptimum-value {
    background: none;
  }
  meter::-webkit-meter-bar {
    block-size: 1em;
    border: 0;
    border-radius: 0;
  }
  meter::-moz-meter-bar {
    background: none;
  }
}
/* Base */
@layer base {
  :focus,
  :focus-visible {
    outline: solid 2px var(--accent-color);
    outline-offset: 1px;
  }
  .clickable {
    cursor: pointer;
  }
  .group {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
  }
}
/* Progress */
@layer base {
  progress {
    border-radius: var(--progress-border-radius);
    block-size: var(--progress-block-size);
    inline-size: var(--progress-inline-size);
    background: var(--progress-bg-color);
  }
  progress::-webkit-progress-bar {
    overflow: hidden;
    border-radius: var(--progress-border-radius);
    background: var(--progress-bg-color);
  }
  progress::-webkit-progress-value {
    border-radius: var(--progress-bar-border-radius);
    background: var(--progress-bar-bg-color);
  }
  progress::-moz-progress-bar {
    border-radius: var(--progress-bar-border-radius);
    background: var(--progress-bar-bg-color);
  }
  meter {
    border-radius: var(--meter-border-radius);
    block-size: var(--meter-block-size);
    inline-size: var(--meter-inline-size);
    background: var(--meter-bg-color);
  }
  meter::-webkit-meter-bar {
    overflow: hidden;
    block-size: var(--meter-block-size);
    border-radius: var(--meter-border-radius);
    background: var(--meter-bg-color);
  }
  meter::-webkit-meter-suboptimum-value {
    border-radius: var(--meter-bar-border-radius);
    background: var(--meter-bar-bg-color);
  }
  meter::-moz-meter-bar {
    border-radius: var(--meter-bar-border-radius);
    background: var(--meter-bar-bg-color);
  }
}
/* Progress */
@layer style {
  .progress-bar, .progress-bar-vertical, .progress-bar-vertical.with-floating-value, .progress-bar.with-floating-value {
    --progress-value: 0%;
    position: relative;
    width: 100%;
    height: var(--progress-block-size);
    pointer-events: none;
  }
  .progress-bar::after, .progress-bar-vertical::after, .progress-bar-vertical.with-floating-value::after, .progress-bar.with-floating-value::after {
    font-size: 12px;
    line-height: 15px;
  }
  .progress-bar .value, .progress-bar-vertical .value {
    overflow: hidden;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: var(--progress-border-radius);
    background-color: var(--progress-bg-color);
    font-size: 0;
    line-height: 0;
  }
  .progress-bar .value::before, .progress-bar-vertical .value::before {
    position: absolute;
    top: 0;
    left: 0;
    width: var(--progress-value);
    height: 100%;
    border-radius: var(--progress-bar-border-radius);
    background-color: var(--progress-bar-bg-color);
    content: "";
  }
  .progress-bar.with-floating-value, .progress-bar-vertical.with-floating-value {
    /* Clip off floating value of the sides */
    overflow-x: clip;
  }
  .progress-bar.with-floating-value::after, .progress-bar-vertical.with-floating-value::after {
    position: absolute;
    bottom: 100%;
    left: var(--progress-value);
    translate: -100% 0;
    content: attr(data-value) "%";
  }
  .progress-bar-vertical, .progress-bar-vertical.with-floating-value {
    width: var(--progress-block-size);
    height: 100%;
    min-height: 200px;
  }
  .progress-bar-vertical .value::before {
    width: 100%;
    height: var(--progress-value);
  }
  .progress-bar-vertical.with-floating-value {
    overflow: visible clip;
  }
  .progress-bar-vertical.with-floating-value::after {
    top: var(--progress-value);
    bottom: auto;
    left: 100%;
    translate: 0 -100%;
    writing-mode: vertical-lr;
  }
}

/*# sourceMappingURL=styles.css.map */
